openapi: 3.0.1
info:
  contact: {}
  description: Conflux-Pay API documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Rainbow-API
  version: "1.0"
servers:
- url: http://127.0.0.1:8080/v0
- url: https://127.0.0.1:8080/v0
paths:
  /orders/summary/{trade_no}:
    get:
      description: query order summary by trade no
      operationId: QueryOrderSummary
      parameters:
      - description: trade no
        in: path
        name: trade_no
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Order'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Internal Server error
      summary: query order summary by trade no
      tags:
      - Orders
  /orders/wechat:
    post:
      description: make order
      operationId: MakeOrder
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/services.MakeOrderReq'
        description: make_wechat_order_req
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Order'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Internal Server error
      summary: Make Order
      tags:
      - Orders
      x-codegen-request-body-name: make_ord_req
  /orders/wechat/close/{trade_no}:
    put:
      description: close order
      operationId: Close
      parameters:
      - description: trade no
        in: path
        name: trade_no
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.WechatOrderDetail'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Internal Server error
      summary: close order
      tags:
      - Orders
  /orders/wechat/refresh-url/{trade_no}:
    put:
      description: refresh pay url
      operationId: RefreshPayUrl
      parameters:
      - description: trade no
        in: path
        name: trade_no
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services.MakeOrderResp'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Internal Server error
      summary: refresh pay url
      tags:
      - Orders
  /orders/wechat/refund/{trade_no}:
    put:
      description: refund pay
      operationId: Refund
      parameters:
      - description: trade no
        in: path
        name: trade_no
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/services.RefundReq'
        description: refund_req
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.WechatRefundDetail'
          description: refund_detail
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Internal Server error
      summary: refund pay
      tags:
      - Orders
      x-codegen-request-body-name: refund_req
  /orders/wechat/{trade_no}:
    get:
      description: query order by trade no
      operationId: QueryWechatOrderDetail
      parameters:
      - description: trade no
        in: path
        name: trade_no
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.WechatOrderDetail'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Internal Server error
      summary: query order by trade no
      tags:
      - Orders
components:
  schemas:
    cns_errors.RainbowErrorDetailInfo:
      properties:
        code:
          type: integer
        message:
          type: string
      type: object
    gorm.DeletedAt:
      example:
        valid: true
        time: time
      properties:
        time:
          type: string
        valid:
          description: Valid is true if Time is not NULL
          type: boolean
      type: object
    models.Order:
      example:
        app_pay_notify_url: app_pay_notify_url
        amount: 0
        time_expire: time_expire
        trade_state: trade_state
        created_at: created_at
        description: description
        trade_provider: trade_provider
        deleted_at:
          valid: true
          time: time
        app_name: app_name
        is_refund_notify_completed: true
        app_refund_notify_url: app_refund_notify_url
        h5_url: h5_url
        updated_at: updated_at
        code_url: code_url
        refund_notify_count: 5
        is_pay_notify_completed: true
        trade_no: trade_no
        trade_type: trade_type
        id: 6
        pay_notify_count: 1
        refund_state: refund_state
      properties:
        amount:
          description: 单位为分
          type: integer
        app_name:
          type: string
        app_pay_notify_url:
          description: 上层应用通知url
          type: string
        app_refund_notify_url:
          description: 上层应用通知url
          type: string
        code_url:
          type: string
        created_at:
          type: string
        deleted_at:
          $ref: '#/components/schemas/gorm.DeletedAt'
        description:
          type: string
        h5_url:
          type: string
        id:
          type: integer
        is_pay_notify_completed:
          type: boolean
        is_refund_notify_completed:
          type: boolean
        pay_notify_count:
          description: PayNotifyNextTime    *time.Time `json:"pay_notify_next_time"`
          type: integer
        refund_notify_count:
          description: RefundNotifyNextTime    *time.Time `json:"refund_notify_next_time"`
          type: integer
        refund_state:
          type: string
        time_expire:
          type: string
        trade_no:
          type: string
        trade_provider:
          type: string
        trade_state:
          type: string
        trade_type:
          type: string
        updated_at:
          type: string
      type: object
    models.WechatOrderDetail:
      example:
        transaction_id: transaction_id
        amount: 0
        mchid: mchid
        trade_state: trade_state
        bank_type: bank_type
        refund_no: refund_no
        created_at: created_at
        success_time: success_time
        deleted_at:
          valid: true
          time: time
        payer: payer
        refresh_status: refresh_status
        updated_at: updated_at
        appid: appid
        trade_state_desc: trade_state_desc
        trade_no: trade_no
        trade_type: trade_type
        attach: attach
        id: 6
      properties:
        amount:
          type: integer
        appid:
          type: string
        attach:
          type: string
        bank_type:
          type: string
        created_at:
          type: string
        deleted_at:
          $ref: '#/components/schemas/gorm.DeletedAt'
        id:
          type: integer
        mchid:
          type: string
        payer:
          type: string
        refresh_status:
          type: string
        refund_no:
          type: string
        success_time:
          type: string
        trade_no:
          type: string
        trade_state:
          type: string
        trade_state_desc:
          type: string
        trade_type:
          type: string
        transaction_id:
          type: string
        updated_at:
          type: string
      type: object
    models.WechatRefundDetail:
      example:
        transaction_id: transaction_id
        amount: 0
        create_time: create_time
        out_refund_no: out_refund_no
        funds_account: funds_account
        channel: channel
        created_at: created_at
        success_time: success_time
        user_received_account: user_received_account
        deleted_at:
          valid: true
          time: time
        refund_id: refund_id
        out_trade_no: out_trade_no
        updated_at: updated_at
        id: 6
        status: status
      properties:
        amount:
          description: 金额详细信息
          type: integer
        channel:
          description: 枚举值： - ORIGINAL—原路退款 - BALANCE—退回到余额 - OTHER_BALANCE—原账户异常退到其他余额账户
            - OTHER_BANKCARD—原银行卡异常退到其他银行卡 * `ORIGINAL` - 原路退款 * `BALANCE` - 退回到余额
            * `OTHER_BALANCE` - 原账户异常退到其他余额账户 * `OTHER_BANKCARD` - 原银行卡异常退到其他银行卡
          type: string
        create_time:
          description: 退款受理时间，遵循rfc3339标准格式，格式为YYYY-MM-DDTHH:mm:ss+TIMEZONE，YYYY-MM-DD表示年月日，T出现在字符串中，表示time元素的开头，HH:mm:ss表示时分秒，TIMEZONE表示时区（+08:00表示东八区时间，领先UTC
            8小时，即北京时间）。例如：2015-05-20T13:29:35+08:00表示，北京时间2015年5月20日13点29分35秒。
          type: string
        created_at:
          type: string
        deleted_at:
          $ref: '#/components/schemas/gorm.DeletedAt'
        funds_account:
          description: "退款所使用资金对应的资金账户类型 枚举值： - UNSETTLED : 未结算资金 - AVAILABLE : 可用\
            余额 - UNAVAILABLE : 不可用余额 - OPERATION : 运营户 - BASIC : 基本账户（含可用余额和不可用余额）\
            \ * `UNSETTLED` - 未结算资金 * `AVAILABLE` - 可用余额 * `UNAVAILABLE` - 不可用余额 *\
            \ `OPERATION` - 运营户 * `BASIC` - 基本账户（含可用余额和不可用余额）"
          type: string
        id:
          type: integer
        out_refund_no:
          description: 商户系统内部的退款单号，商户系统内部唯一，只能是数字、大小写字母_-|*@ ，同一退款单号多次请求只退一笔。
          type: string
        out_trade_no:
          description: 原支付交易对应的商户订单号
          type: string
        refund_id:
          type: string
        status:
          description: 退款到银行发现用户的卡作废或者冻结了，导致原路退款银行卡失败，可前往商户平台（pay.weixin.qq.com）-交易中心，手动处理此笔退款。
            枚举值： - SUCCESS—退款成功 - CLOSED—退款关闭 - PROCESSING—退款处理中 - ABNORMAL—退款异常 *
            `SUCCESS` - 退款成功 * `CLOSED` - 退款关闭 * `PROCESSING` - 退款处理中 * `ABNORMAL`
            - 退款异常
          type: string
        success_time:
          description: 退款成功时间，退款状态status为SUCCESS（退款成功）时，返回该字段。遵循rfc3339标准格式，格式为YYYY-MM-DDTHH:mm:ss+TIMEZONE，YYYY-MM-DD表示年月日，T出现在字符串中，表示time元素的开头，HH:mm:ss表示时分秒，TIMEZONE表示时区（+08:00表示东八区时间，领先UTC
            8小时，即北京时间）。例如：2015-05-20T13:29:35+08:00表示，北京时间2015年5月20日13点29分35秒。
          type: string
        transaction_id:
          description: 微信支付交易订单号
          type: string
        updated_at:
          type: string
        user_received_account:
          description: "取当前退款单的退款入账方，有以下几种情况： 1）退回银行卡：{银行名称}{卡类型}{卡尾号} 2）退回支付用户零钱\
            :支付用户零钱 3）退还商户:商户基本账户商户结算银行账户 4）退回支付用户零钱通:支付用户零钱通"
          type: string
      type: object
    services.MakeOrderReq:
      properties:
        amount:
          type: integer
        description:
          type: string
        notify_url:
          type: string
        time_expire:
          type: integer
        trade_type:
          type: string
      required:
      - amount
      - description
      - time_expire
      - trade_type
      type: object
    services.MakeOrderResp:
      example:
        h5_url: h5_url
        code_url: code_url
        trade_no: trade_no
        trade_type: trade_type
        trade_provider: trade_provider
      properties:
        code_url:
          type: string
        h5_url:
          type: string
        trade_no:
          type: string
        trade_provider:
          type: string
        trade_type:
          type: string
      type: object
    services.RefundReq:
      properties:
        notify_url:
          type: string
        reason:
          type: string
      required:
      - reason
      type: object
x-original-swagger-version: "2.0"
