openapi: 3.0.1
info:
  contact: {}
  description: Conflux-Pay API documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Rainbow-API
  version: "1.0"
servers:
- url: http://127.0.0.1:8080/v0
- url: https://127.0.0.1:8080/v0
paths:
  /cmb/history:
    get:
      description: 查询历史交易
      operationId: QueryHistoryCmbRecords
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        schema:
          type: integer
      - description: offset
        in: query
        name: offset
        required: true
        schema:
          type: integer
      - description: specified unit account number
        in: query
        name: unit_account_nbr
        required: true
        schema:
          type: string
      - description: "specified date, e.g. 20230523"
        in: query
        name: transaction_date
        required: true
        schema:
          type: string
      - description: "transaction direction, C for recieve and D for out"
        in: query
        name: transaction_direction
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/models.CmbRecord'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Internal Server error
      summary: 查询历史交易
      tags:
      - Cmb
  /cmb/history/recent:
    get:
      description: 查询昨天和今天汇入的交易
      operationId: QueryRecentCmbRecords
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        schema:
          type: integer
      - description: offset
        in: query
        name: offset
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/models.CmbRecord'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Internal Server error
      summary: 查询昨天和今天汇入的交易
      tags:
      - Cmb
  /cmb/unit-account:
    post:
      description: Add a unit account
      operationId: AddUnitAccount
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/controllers.AddUnitAccountReq'
        description: add_unit_account_req
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Internal Server error
      summary: Add a unit account
      tags:
      - Cmb
      x-codegen-request-body-name: add_unit_account_req
  /cmb/unit-account/relation:
    post:
      description: Set a related bank account of a unit account
      operationId: SetUnitAccountRelation
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/controllers.SetUnitAccountRelationReq'
        description: set_unit_account_relation_req
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Internal Server error
      summary: Set a related bank account of a unit account
      tags:
      - Cmb
      x-codegen-request-body-name: set_unit_account_relation_req
  /orders:
    post:
      description: make order
      operationId: MakeOrder
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/services.MakeOrderReq'
        description: make_wechat_order_req
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Order'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Internal Server error
      summary: Make Order
      tags:
      - Orders
      x-codegen-request-body-name: make_ord_req
  /orders/close/{trade_no}:
    put:
      description: close order
      operationId: Close
      parameters:
      - description: trade no
        in: path
        name: trade_no
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.OrderCore'
          description: order
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Internal Server error
      summary: close order
      tags:
      - Orders
  /orders/refresh-url/{trade_no}:
    put:
      description: refresh pay url
      operationId: RefreshPayUrl
      parameters:
      - description: trade no
        in: path
        name: trade_no
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Order'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Internal Server error
      summary: refresh pay url
      tags:
      - Orders
  /orders/refund/{trade_no}:
    put:
      description: refund pay
      operationId: Refund
      parameters:
      - description: trade no
        in: path
        name: trade_no
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/services.RefundReq'
        description: refund_req
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.OrderCore'
          description: order
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Internal Server error
      summary: refund pay
      tags:
      - Orders
      x-codegen-request-body-name: refund_req
  /orders/{trade_no}:
    get:
      description: query order by trade no
      operationId: QueryOrder
      parameters:
      - description: trade no
        in: path
        name: trade_no
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.Order'
          description: order
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cns_errors.RainbowErrorDetailInfo'
          description: Internal Server error
      summary: query order by trade no
      tags:
      - Orders
components:
  schemas:
    cns_errors.RainbowErrorDetailInfo:
      properties:
        code:
          type: integer
        message:
          type: string
      type: object
    controllers.AddUnitAccountReq:
      properties:
        unit_account_name:
          type: string
        unit_account_nbr:
          type: string
      required:
      - unit_account_name
      - unit_account_nbr
      type: object
    controllers.SetUnitAccountRelationReq:
      properties:
        bank_account_nbr:
          type: string
        unit_account_nbr:
          type: string
      required:
      - bank_account_nbr
      - unit_account_nbr
      type: object
    gorm.DeletedAt:
      example:
        valid: true
        time: time
      properties:
        time:
          type: string
        valid:
          description: Valid is true if Time is not NULL
          type: boolean
      type: object
    models.CmbRecord:
      example:
        trxDir: trxDir
        trxTxt: trxTxt
        created_at: created_at
        narInn: narInn
        rpyAcc: rpyAcc
        autFlg: autFlg
        deleted_at:
          valid: true
          time: time
        trxDat: trxDat
        trxTim: trxTim
        dmaNam: dmaNam
        trxNbr: trxNbr
        updated_at: updated_at
        rpyNam: rpyNam
        dmaNbr: dmaNbr
        accNbr: accNbr
        id: 0
        ccyNbr: ccyNbr
        trxAmt: 6.027456183070403
      properties:
        accNbr:
          type: string
        autFlg:
          description: useless
          type: string
        ccyNbr:
          description: expected to be rmb
          type: string
        created_at:
          type: string
        deleted_at:
          $ref: '#/components/schemas/gorm.DeletedAt'
        dmaNam:
          description: sub unit name
          type: string
        dmaNbr:
          description: sub unit number
          type: string
        id:
          type: integer
        narInn:
          description: useless
          type: string
        rpyAcc:
          description: useless
          type: string
        rpyNam:
          description: useless
          type: string
        trxAmt:
          type: number
        trxDat:
          type: string
        trxDir:
          description: tx direction
          type: string
        trxNbr:
          description: unique
          type: string
        trxTim:
          type: string
        trxTxt:
          description: txt that sender appended
          type: string
        updated_at:
          type: string
      type: object
    models.Order:
      example:
        time_expire: time_expire
        trade_state: trade_state
        created_at: created_at
        description: description
        qr_pay_mode: qr_pay_mode
        is_refund_notify_completed: true
        app_refund_notify_url: app_refund_notify_url
        updated_at: updated_at
        code_url: code_url
        is_pay_notify_completed: true
        return_url: return_url
        qr_code_width: qr_code_width
        id: 6
        pay_notify_count: 1
        app_pay_notify_url: app_pay_notify_url
        amount: 0
        trade_provider: trade_provider
        deleted_at:
          valid: true
          time: time
        app_name: app_name
        h5_url: h5_url
        wap_url: wap_url
        refund_notify_count: 5
        trade_no: trade_no
        trade_type: trade_type
        refund_state: refund_state
      properties:
        amount:
          description: 单位为分
          type: integer
        app_name:
          type: string
        app_pay_notify_url:
          description: 上层应用通知url
          type: string
        app_refund_notify_url:
          description: 上层应用通知url
          type: string
        code_url:
          type: string
        created_at:
          type: string
        deleted_at:
          $ref: '#/components/schemas/gorm.DeletedAt'
        description:
          type: string
        h5_url:
          type: string
        id:
          type: integer
        is_pay_notify_completed:
          type: boolean
        is_refund_notify_completed:
          type: boolean
        pay_notify_count:
          description: PayNotifyNextTime    *time.Time `json:"pay_notify_next_time"`
          type: integer
        qr_code_width:
          description: 二维码宽度。 只有alipay，且 trade type 为 h5 模式有效，qr pay mode 为4 时有效；
            用法参考 https://opendocs.alipay.com/apis/api_1/alipay.trade.page.pay?scene=22
          type: string
        qr_pay_mode:
          description: 支付二维码模式。 只有alipay，且 trade type 为 h5 模式有效; 用法参考 https://opendocs.alipay.com/apis/api_1/alipay.trade.page.pay?scene=22
          type: string
        refund_notify_count:
          description: RefundNotifyNextTime    *time.Time `json:"refund_notify_next_time"`
          type: integer
        refund_state:
          type: string
        return_url:
          description: 付款成功后的跳转链接。只有alipay，且 trade type 为 h5 模式有效; 用法参考 https://opendocs.alipay.com/apis/api_1/alipay.trade.page.pay?scene=22
          type: string
        time_expire:
          type: string
        trade_no:
          type: string
        trade_provider:
          type: string
        trade_state:
          type: string
        trade_type:
          type: string
        updated_at:
          type: string
        wap_url:
          type: string
      type: object
    models.OrderCore:
      example:
        amount: 0
        time_expire: time_expire
        trade_state: trade_state
        description: description
        qr_pay_mode: qr_pay_mode
        trade_provider: trade_provider
        app_name: app_name
        h5_url: h5_url
        wap_url: wap_url
        code_url: code_url
        return_url: return_url
        trade_no: trade_no
        trade_type: trade_type
        qr_code_width: qr_code_width
        refund_state: refund_state
      properties:
        amount:
          description: 单位为分
          type: integer
        app_name:
          type: string
        code_url:
          type: string
        description:
          type: string
        h5_url:
          type: string
        qr_code_width:
          description: 二维码宽度。 只有alipay，且 trade type 为 h5 模式有效，qr pay mode 为4 时有效；
            用法参考 https://opendocs.alipay.com/apis/api_1/alipay.trade.page.pay?scene=22
          type: string
        qr_pay_mode:
          description: 支付二维码模式。 只有alipay，且 trade type 为 h5 模式有效; 用法参考 https://opendocs.alipay.com/apis/api_1/alipay.trade.page.pay?scene=22
          type: string
        refund_state:
          type: string
        return_url:
          description: 付款成功后的跳转链接。只有alipay，且 trade type 为 h5 模式有效; 用法参考 https://opendocs.alipay.com/apis/api_1/alipay.trade.page.pay?scene=22
          type: string
        time_expire:
          type: string
        trade_no:
          type: string
        trade_provider:
          type: string
        trade_state:
          type: string
        trade_type:
          type: string
        wap_url:
          type: string
      type: object
    services.MakeOrderReq:
      properties:
        amount:
          type: integer
        app_name:
          type: string
        description:
          type: string
        notify_url:
          type: string
        qr_code_width:
          description: 二维码宽度。 只有alipay，且 trade type 为 h5 模式有效，qr pay mode 为4 时有效；
            用法参考 https://opendocs.alipay.com/apis/api_1/alipay.trade.page.pay?scene=22
          type: string
        qr_pay_mode:
          description: 支付二维码模式。 只有alipay，且 trade type 为 h5 模式有效; 用法参考 https://opendocs.alipay.com/apis/api_1/alipay.trade.page.pay?scene=22
          type: string
        return_url:
          description: 付款成功后的跳转链接。只有alipay，且 trade type 为 h5 模式有效; 用法参考 https://opendocs.alipay.com/apis/api_1/alipay.trade.page.pay?scene=22
          type: string
        time_expire:
          description: alipay 当面付无效，当面付固定过期时间为2小时
          type: integer
        trade_provider:
          type: string
        trade_type:
          type: string
      required:
      - amount
      - app_name
      - description
      - time_expire
      - trade_provider
      - trade_type
      type: object
    services.RefundReq:
      properties:
        notify_url:
          type: string
        reason:
          type: string
      required:
      - reason
      type: object
x-original-swagger-version: "2.0"
