/*
Rainbow-API

Conflux-Pay API documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluxpay

import (
	"encoding/json"
)

// checks if the ModelsCmbRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCmbRecord{}

// ModelsCmbRecord struct for ModelsCmbRecord
type ModelsCmbRecord struct {
	AccNbr *string `json:"accNbr,omitempty"`
	// useless
	AutFlg *string `json:"autFlg,omitempty"`
	// expected to be rmb
	CcyNbr *string `json:"ccyNbr,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	DeletedAt *GormDeletedAt `json:"deleted_at,omitempty"`
	// sub unit name
	DmaNam *string `json:"dmaNam,omitempty"`
	// sub unit number
	DmaNbr *string `json:"dmaNbr,omitempty"`
	Id *int32 `json:"id,omitempty"`
	// useless
	NarInn *string `json:"narInn,omitempty"`
	// useless
	RpyAcc *string `json:"rpyAcc,omitempty"`
	// useless
	RpyNam *string `json:"rpyNam,omitempty"`
	TrxAmt *float32 `json:"trxAmt,omitempty"`
	TrxDat *string `json:"trxDat,omitempty"`
	// tx direction
	TrxDir *string `json:"trxDir,omitempty"`
	// unique
	TrxNbr *string `json:"trxNbr,omitempty"`
	TrxTim *string `json:"trxTim,omitempty"`
	// txt that sender appended
	TrxTxt *string `json:"trxTxt,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModelsCmbRecord ModelsCmbRecord

// NewModelsCmbRecord instantiates a new ModelsCmbRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCmbRecord() *ModelsCmbRecord {
	this := ModelsCmbRecord{}
	return &this
}

// NewModelsCmbRecordWithDefaults instantiates a new ModelsCmbRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCmbRecordWithDefaults() *ModelsCmbRecord {
	this := ModelsCmbRecord{}
	return &this
}

// GetAccNbr returns the AccNbr field value if set, zero value otherwise.
func (o *ModelsCmbRecord) GetAccNbr() string {
	if o == nil || isNil(o.AccNbr) {
		var ret string
		return ret
	}
	return *o.AccNbr
}

// GetAccNbrOk returns a tuple with the AccNbr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCmbRecord) GetAccNbrOk() (*string, bool) {
	if o == nil || isNil(o.AccNbr) {
		return nil, false
	}
	return o.AccNbr, true
}

// HasAccNbr returns a boolean if a field has been set.
func (o *ModelsCmbRecord) HasAccNbr() bool {
	if o != nil && !isNil(o.AccNbr) {
		return true
	}

	return false
}

// SetAccNbr gets a reference to the given string and assigns it to the AccNbr field.
func (o *ModelsCmbRecord) SetAccNbr(v string) {
	o.AccNbr = &v
}

// GetAutFlg returns the AutFlg field value if set, zero value otherwise.
func (o *ModelsCmbRecord) GetAutFlg() string {
	if o == nil || isNil(o.AutFlg) {
		var ret string
		return ret
	}
	return *o.AutFlg
}

// GetAutFlgOk returns a tuple with the AutFlg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCmbRecord) GetAutFlgOk() (*string, bool) {
	if o == nil || isNil(o.AutFlg) {
		return nil, false
	}
	return o.AutFlg, true
}

// HasAutFlg returns a boolean if a field has been set.
func (o *ModelsCmbRecord) HasAutFlg() bool {
	if o != nil && !isNil(o.AutFlg) {
		return true
	}

	return false
}

// SetAutFlg gets a reference to the given string and assigns it to the AutFlg field.
func (o *ModelsCmbRecord) SetAutFlg(v string) {
	o.AutFlg = &v
}

// GetCcyNbr returns the CcyNbr field value if set, zero value otherwise.
func (o *ModelsCmbRecord) GetCcyNbr() string {
	if o == nil || isNil(o.CcyNbr) {
		var ret string
		return ret
	}
	return *o.CcyNbr
}

// GetCcyNbrOk returns a tuple with the CcyNbr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCmbRecord) GetCcyNbrOk() (*string, bool) {
	if o == nil || isNil(o.CcyNbr) {
		return nil, false
	}
	return o.CcyNbr, true
}

// HasCcyNbr returns a boolean if a field has been set.
func (o *ModelsCmbRecord) HasCcyNbr() bool {
	if o != nil && !isNil(o.CcyNbr) {
		return true
	}

	return false
}

// SetCcyNbr gets a reference to the given string and assigns it to the CcyNbr field.
func (o *ModelsCmbRecord) SetCcyNbr(v string) {
	o.CcyNbr = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsCmbRecord) GetCreatedAt() string {
	if o == nil || isNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCmbRecord) GetCreatedAtOk() (*string, bool) {
	if o == nil || isNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsCmbRecord) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsCmbRecord) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *ModelsCmbRecord) GetDeletedAt() GormDeletedAt {
	if o == nil || isNil(o.DeletedAt) {
		var ret GormDeletedAt
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCmbRecord) GetDeletedAtOk() (*GormDeletedAt, bool) {
	if o == nil || isNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *ModelsCmbRecord) HasDeletedAt() bool {
	if o != nil && !isNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given GormDeletedAt and assigns it to the DeletedAt field.
func (o *ModelsCmbRecord) SetDeletedAt(v GormDeletedAt) {
	o.DeletedAt = &v
}

// GetDmaNam returns the DmaNam field value if set, zero value otherwise.
func (o *ModelsCmbRecord) GetDmaNam() string {
	if o == nil || isNil(o.DmaNam) {
		var ret string
		return ret
	}
	return *o.DmaNam
}

// GetDmaNamOk returns a tuple with the DmaNam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCmbRecord) GetDmaNamOk() (*string, bool) {
	if o == nil || isNil(o.DmaNam) {
		return nil, false
	}
	return o.DmaNam, true
}

// HasDmaNam returns a boolean if a field has been set.
func (o *ModelsCmbRecord) HasDmaNam() bool {
	if o != nil && !isNil(o.DmaNam) {
		return true
	}

	return false
}

// SetDmaNam gets a reference to the given string and assigns it to the DmaNam field.
func (o *ModelsCmbRecord) SetDmaNam(v string) {
	o.DmaNam = &v
}

// GetDmaNbr returns the DmaNbr field value if set, zero value otherwise.
func (o *ModelsCmbRecord) GetDmaNbr() string {
	if o == nil || isNil(o.DmaNbr) {
		var ret string
		return ret
	}
	return *o.DmaNbr
}

// GetDmaNbrOk returns a tuple with the DmaNbr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCmbRecord) GetDmaNbrOk() (*string, bool) {
	if o == nil || isNil(o.DmaNbr) {
		return nil, false
	}
	return o.DmaNbr, true
}

// HasDmaNbr returns a boolean if a field has been set.
func (o *ModelsCmbRecord) HasDmaNbr() bool {
	if o != nil && !isNil(o.DmaNbr) {
		return true
	}

	return false
}

// SetDmaNbr gets a reference to the given string and assigns it to the DmaNbr field.
func (o *ModelsCmbRecord) SetDmaNbr(v string) {
	o.DmaNbr = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsCmbRecord) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCmbRecord) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsCmbRecord) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsCmbRecord) SetId(v int32) {
	o.Id = &v
}

// GetNarInn returns the NarInn field value if set, zero value otherwise.
func (o *ModelsCmbRecord) GetNarInn() string {
	if o == nil || isNil(o.NarInn) {
		var ret string
		return ret
	}
	return *o.NarInn
}

// GetNarInnOk returns a tuple with the NarInn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCmbRecord) GetNarInnOk() (*string, bool) {
	if o == nil || isNil(o.NarInn) {
		return nil, false
	}
	return o.NarInn, true
}

// HasNarInn returns a boolean if a field has been set.
func (o *ModelsCmbRecord) HasNarInn() bool {
	if o != nil && !isNil(o.NarInn) {
		return true
	}

	return false
}

// SetNarInn gets a reference to the given string and assigns it to the NarInn field.
func (o *ModelsCmbRecord) SetNarInn(v string) {
	o.NarInn = &v
}

// GetRpyAcc returns the RpyAcc field value if set, zero value otherwise.
func (o *ModelsCmbRecord) GetRpyAcc() string {
	if o == nil || isNil(o.RpyAcc) {
		var ret string
		return ret
	}
	return *o.RpyAcc
}

// GetRpyAccOk returns a tuple with the RpyAcc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCmbRecord) GetRpyAccOk() (*string, bool) {
	if o == nil || isNil(o.RpyAcc) {
		return nil, false
	}
	return o.RpyAcc, true
}

// HasRpyAcc returns a boolean if a field has been set.
func (o *ModelsCmbRecord) HasRpyAcc() bool {
	if o != nil && !isNil(o.RpyAcc) {
		return true
	}

	return false
}

// SetRpyAcc gets a reference to the given string and assigns it to the RpyAcc field.
func (o *ModelsCmbRecord) SetRpyAcc(v string) {
	o.RpyAcc = &v
}

// GetRpyNam returns the RpyNam field value if set, zero value otherwise.
func (o *ModelsCmbRecord) GetRpyNam() string {
	if o == nil || isNil(o.RpyNam) {
		var ret string
		return ret
	}
	return *o.RpyNam
}

// GetRpyNamOk returns a tuple with the RpyNam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCmbRecord) GetRpyNamOk() (*string, bool) {
	if o == nil || isNil(o.RpyNam) {
		return nil, false
	}
	return o.RpyNam, true
}

// HasRpyNam returns a boolean if a field has been set.
func (o *ModelsCmbRecord) HasRpyNam() bool {
	if o != nil && !isNil(o.RpyNam) {
		return true
	}

	return false
}

// SetRpyNam gets a reference to the given string and assigns it to the RpyNam field.
func (o *ModelsCmbRecord) SetRpyNam(v string) {
	o.RpyNam = &v
}

// GetTrxAmt returns the TrxAmt field value if set, zero value otherwise.
func (o *ModelsCmbRecord) GetTrxAmt() float32 {
	if o == nil || isNil(o.TrxAmt) {
		var ret float32
		return ret
	}
	return *o.TrxAmt
}

// GetTrxAmtOk returns a tuple with the TrxAmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCmbRecord) GetTrxAmtOk() (*float32, bool) {
	if o == nil || isNil(o.TrxAmt) {
		return nil, false
	}
	return o.TrxAmt, true
}

// HasTrxAmt returns a boolean if a field has been set.
func (o *ModelsCmbRecord) HasTrxAmt() bool {
	if o != nil && !isNil(o.TrxAmt) {
		return true
	}

	return false
}

// SetTrxAmt gets a reference to the given float32 and assigns it to the TrxAmt field.
func (o *ModelsCmbRecord) SetTrxAmt(v float32) {
	o.TrxAmt = &v
}

// GetTrxDat returns the TrxDat field value if set, zero value otherwise.
func (o *ModelsCmbRecord) GetTrxDat() string {
	if o == nil || isNil(o.TrxDat) {
		var ret string
		return ret
	}
	return *o.TrxDat
}

// GetTrxDatOk returns a tuple with the TrxDat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCmbRecord) GetTrxDatOk() (*string, bool) {
	if o == nil || isNil(o.TrxDat) {
		return nil, false
	}
	return o.TrxDat, true
}

// HasTrxDat returns a boolean if a field has been set.
func (o *ModelsCmbRecord) HasTrxDat() bool {
	if o != nil && !isNil(o.TrxDat) {
		return true
	}

	return false
}

// SetTrxDat gets a reference to the given string and assigns it to the TrxDat field.
func (o *ModelsCmbRecord) SetTrxDat(v string) {
	o.TrxDat = &v
}

// GetTrxDir returns the TrxDir field value if set, zero value otherwise.
func (o *ModelsCmbRecord) GetTrxDir() string {
	if o == nil || isNil(o.TrxDir) {
		var ret string
		return ret
	}
	return *o.TrxDir
}

// GetTrxDirOk returns a tuple with the TrxDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCmbRecord) GetTrxDirOk() (*string, bool) {
	if o == nil || isNil(o.TrxDir) {
		return nil, false
	}
	return o.TrxDir, true
}

// HasTrxDir returns a boolean if a field has been set.
func (o *ModelsCmbRecord) HasTrxDir() bool {
	if o != nil && !isNil(o.TrxDir) {
		return true
	}

	return false
}

// SetTrxDir gets a reference to the given string and assigns it to the TrxDir field.
func (o *ModelsCmbRecord) SetTrxDir(v string) {
	o.TrxDir = &v
}

// GetTrxNbr returns the TrxNbr field value if set, zero value otherwise.
func (o *ModelsCmbRecord) GetTrxNbr() string {
	if o == nil || isNil(o.TrxNbr) {
		var ret string
		return ret
	}
	return *o.TrxNbr
}

// GetTrxNbrOk returns a tuple with the TrxNbr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCmbRecord) GetTrxNbrOk() (*string, bool) {
	if o == nil || isNil(o.TrxNbr) {
		return nil, false
	}
	return o.TrxNbr, true
}

// HasTrxNbr returns a boolean if a field has been set.
func (o *ModelsCmbRecord) HasTrxNbr() bool {
	if o != nil && !isNil(o.TrxNbr) {
		return true
	}

	return false
}

// SetTrxNbr gets a reference to the given string and assigns it to the TrxNbr field.
func (o *ModelsCmbRecord) SetTrxNbr(v string) {
	o.TrxNbr = &v
}

// GetTrxTim returns the TrxTim field value if set, zero value otherwise.
func (o *ModelsCmbRecord) GetTrxTim() string {
	if o == nil || isNil(o.TrxTim) {
		var ret string
		return ret
	}
	return *o.TrxTim
}

// GetTrxTimOk returns a tuple with the TrxTim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCmbRecord) GetTrxTimOk() (*string, bool) {
	if o == nil || isNil(o.TrxTim) {
		return nil, false
	}
	return o.TrxTim, true
}

// HasTrxTim returns a boolean if a field has been set.
func (o *ModelsCmbRecord) HasTrxTim() bool {
	if o != nil && !isNil(o.TrxTim) {
		return true
	}

	return false
}

// SetTrxTim gets a reference to the given string and assigns it to the TrxTim field.
func (o *ModelsCmbRecord) SetTrxTim(v string) {
	o.TrxTim = &v
}

// GetTrxTxt returns the TrxTxt field value if set, zero value otherwise.
func (o *ModelsCmbRecord) GetTrxTxt() string {
	if o == nil || isNil(o.TrxTxt) {
		var ret string
		return ret
	}
	return *o.TrxTxt
}

// GetTrxTxtOk returns a tuple with the TrxTxt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCmbRecord) GetTrxTxtOk() (*string, bool) {
	if o == nil || isNil(o.TrxTxt) {
		return nil, false
	}
	return o.TrxTxt, true
}

// HasTrxTxt returns a boolean if a field has been set.
func (o *ModelsCmbRecord) HasTrxTxt() bool {
	if o != nil && !isNil(o.TrxTxt) {
		return true
	}

	return false
}

// SetTrxTxt gets a reference to the given string and assigns it to the TrxTxt field.
func (o *ModelsCmbRecord) SetTrxTxt(v string) {
	o.TrxTxt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsCmbRecord) GetUpdatedAt() string {
	if o == nil || isNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCmbRecord) GetUpdatedAtOk() (*string, bool) {
	if o == nil || isNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsCmbRecord) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsCmbRecord) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o ModelsCmbRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCmbRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AccNbr) {
		toSerialize["accNbr"] = o.AccNbr
	}
	if !isNil(o.AutFlg) {
		toSerialize["autFlg"] = o.AutFlg
	}
	if !isNil(o.CcyNbr) {
		toSerialize["ccyNbr"] = o.CcyNbr
	}
	if !isNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !isNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !isNil(o.DmaNam) {
		toSerialize["dmaNam"] = o.DmaNam
	}
	if !isNil(o.DmaNbr) {
		toSerialize["dmaNbr"] = o.DmaNbr
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.NarInn) {
		toSerialize["narInn"] = o.NarInn
	}
	if !isNil(o.RpyAcc) {
		toSerialize["rpyAcc"] = o.RpyAcc
	}
	if !isNil(o.RpyNam) {
		toSerialize["rpyNam"] = o.RpyNam
	}
	if !isNil(o.TrxAmt) {
		toSerialize["trxAmt"] = o.TrxAmt
	}
	if !isNil(o.TrxDat) {
		toSerialize["trxDat"] = o.TrxDat
	}
	if !isNil(o.TrxDir) {
		toSerialize["trxDir"] = o.TrxDir
	}
	if !isNil(o.TrxNbr) {
		toSerialize["trxNbr"] = o.TrxNbr
	}
	if !isNil(o.TrxTim) {
		toSerialize["trxTim"] = o.TrxTim
	}
	if !isNil(o.TrxTxt) {
		toSerialize["trxTxt"] = o.TrxTxt
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ModelsCmbRecord) UnmarshalJSON(bytes []byte) (err error) {
	varModelsCmbRecord := _ModelsCmbRecord{}

	if err = json.Unmarshal(bytes, &varModelsCmbRecord); err == nil {
		*o = ModelsCmbRecord(varModelsCmbRecord)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "accNbr")
		delete(additionalProperties, "autFlg")
		delete(additionalProperties, "ccyNbr")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "deleted_at")
		delete(additionalProperties, "dmaNam")
		delete(additionalProperties, "dmaNbr")
		delete(additionalProperties, "id")
		delete(additionalProperties, "narInn")
		delete(additionalProperties, "rpyAcc")
		delete(additionalProperties, "rpyNam")
		delete(additionalProperties, "trxAmt")
		delete(additionalProperties, "trxDat")
		delete(additionalProperties, "trxDir")
		delete(additionalProperties, "trxNbr")
		delete(additionalProperties, "trxTim")
		delete(additionalProperties, "trxTxt")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsCmbRecord struct {
	value *ModelsCmbRecord
	isSet bool
}

func (v NullableModelsCmbRecord) Get() *ModelsCmbRecord {
	return v.value
}

func (v *NullableModelsCmbRecord) Set(val *ModelsCmbRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCmbRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCmbRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCmbRecord(val *ModelsCmbRecord) *NullableModelsCmbRecord {
	return &NullableModelsCmbRecord{value: val, isSet: true}
}

func (v NullableModelsCmbRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCmbRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


