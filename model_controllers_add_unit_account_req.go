/*
Rainbow-API

Conflux-Pay API documentation

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluxpay

import (
	"encoding/json"
)

// checks if the ControllersAddUnitAccountReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ControllersAddUnitAccountReq{}

// ControllersAddUnitAccountReq struct for ControllersAddUnitAccountReq
type ControllersAddUnitAccountReq struct {
	UnitAccountName string `json:"unit_account_name"`
	UnitAccountNbr string `json:"unit_account_nbr"`
	AdditionalProperties map[string]interface{}
}

type _ControllersAddUnitAccountReq ControllersAddUnitAccountReq

// NewControllersAddUnitAccountReq instantiates a new ControllersAddUnitAccountReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControllersAddUnitAccountReq(unitAccountName string, unitAccountNbr string) *ControllersAddUnitAccountReq {
	this := ControllersAddUnitAccountReq{}
	this.UnitAccountName = unitAccountName
	this.UnitAccountNbr = unitAccountNbr
	return &this
}

// NewControllersAddUnitAccountReqWithDefaults instantiates a new ControllersAddUnitAccountReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControllersAddUnitAccountReqWithDefaults() *ControllersAddUnitAccountReq {
	this := ControllersAddUnitAccountReq{}
	return &this
}

// GetUnitAccountName returns the UnitAccountName field value
func (o *ControllersAddUnitAccountReq) GetUnitAccountName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnitAccountName
}

// GetUnitAccountNameOk returns a tuple with the UnitAccountName field value
// and a boolean to check if the value has been set.
func (o *ControllersAddUnitAccountReq) GetUnitAccountNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnitAccountName, true
}

// SetUnitAccountName sets field value
func (o *ControllersAddUnitAccountReq) SetUnitAccountName(v string) {
	o.UnitAccountName = v
}

// GetUnitAccountNbr returns the UnitAccountNbr field value
func (o *ControllersAddUnitAccountReq) GetUnitAccountNbr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnitAccountNbr
}

// GetUnitAccountNbrOk returns a tuple with the UnitAccountNbr field value
// and a boolean to check if the value has been set.
func (o *ControllersAddUnitAccountReq) GetUnitAccountNbrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnitAccountNbr, true
}

// SetUnitAccountNbr sets field value
func (o *ControllersAddUnitAccountReq) SetUnitAccountNbr(v string) {
	o.UnitAccountNbr = v
}

func (o ControllersAddUnitAccountReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ControllersAddUnitAccountReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["unit_account_name"] = o.UnitAccountName
	toSerialize["unit_account_nbr"] = o.UnitAccountNbr

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ControllersAddUnitAccountReq) UnmarshalJSON(bytes []byte) (err error) {
	varControllersAddUnitAccountReq := _ControllersAddUnitAccountReq{}

	if err = json.Unmarshal(bytes, &varControllersAddUnitAccountReq); err == nil {
		*o = ControllersAddUnitAccountReq(varControllersAddUnitAccountReq)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "unit_account_name")
		delete(additionalProperties, "unit_account_nbr")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableControllersAddUnitAccountReq struct {
	value *ControllersAddUnitAccountReq
	isSet bool
}

func (v NullableControllersAddUnitAccountReq) Get() *ControllersAddUnitAccountReq {
	return v.value
}

func (v *NullableControllersAddUnitAccountReq) Set(val *ControllersAddUnitAccountReq) {
	v.value = val
	v.isSet = true
}

func (v NullableControllersAddUnitAccountReq) IsSet() bool {
	return v.isSet
}

func (v *NullableControllersAddUnitAccountReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControllersAddUnitAccountReq(val *ControllersAddUnitAccountReq) *NullableControllersAddUnitAccountReq {
	return &NullableControllersAddUnitAccountReq{value: val, isSet: true}
}

func (v NullableControllersAddUnitAccountReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControllersAddUnitAccountReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


